import sys
import os
import pandas as pd
import numpy as np


# os.path
for dirname, _, filenames in os.walk(path):
  for filename in filenames:
    print(os.path.join(dirname, filename))
    

# read_csv
test = pd.read_csv(path)


# columns check
# test.columns, value_counts, describe


# NA값 삭제, 추가
test.dropna(how='any', axis=0)
test.fillna(1)


# 시리즈의 타입 변경
test['PassengerId'] = test['PassengerId'].astype('int')


# OPEN CV 라이브러리 활용
import cv2

# 동영상 출력
## 동영상 파일 출력
import cv2
cap = cv2.VideoCapture('video.mp4')

while cap.isOpened() : # 동영상이 파일이 올바로 열렸는지 확인
    ret, frame = cap.read() # ret : 성공 여부, frame : 받아온 이미지 (프레임)
    if not ret:
        print('더 이상 가져올 프레임이 없습니다.')
        break
        
    cv2.imshow('video', frame)
    
    if cv2.waitKey(1) == ord('q'):
        print('사용자 입력에 의해 종료합니다.')
        break
        
cap.release() # 자원 해제
cv2.destroyAllWindows() # 모든 창 닫기 

## 카메라 출력
import cv2
cap = cv2.VideoCapture(0) # 0번째 카메라 장치 (Device ID)

if not cap.isOpened(): # 카메라가 잘 열리지 않은 경우
    exit() # 프로그램 종료
    
while True:
    ret, frame = cap.read()
    if not ret:
        break
    
    cv2.imshow('camera', frame)
    
    if cv2.waitKey(1) == ord('q'): # 사용자가 q를 입력하면
        break
        
cap.release()
cv2.destroyAllWindows()

# 한글 우회 방법
from PIL import ImageFont, ImageDraw, Image

def myPutText(src, text, pos, font_size, font_color):
    img_pil = Image.fromarray(src)
    draw = ImageDraw.Draw(img_pil)
    font = ImageFont.truetype("fonts/gulim.ttc", font_size)
    draw.text(pos, text, font=font, fill=font_color)
    return np.array(img_pil)


# 숫자 받기
a,b,c = map(int, input().split())


# 16 진수 구구단 출력
a = int(input(),16)
for i in range(1,16):
    print('%X'%a, '*%X'%i, '=%X'%(a*i), sep='')    
    # print('%X'%n) -> n에 저장되어있는 값을 16진수(hexadecimal)형태로 출력
    # 작은 따옴표 2개로 print(..., sep='')으로 출력 시 공백없이 모두 붙어 출력된다.
    # 작은 따옴표 2개 '' 또는 큰 따옴표 2개 ""는 아무 문자도 없는 빈문자여(empty string)을 의미한다.
    
 
# 색깔 개수 만들기
r, g, b = map(int, input().split())

count = 0

for i in range(0, r):
    for x in range(0, g):
        for l in range(0, b):
            print(i, x, l, sep=' ')
            count +=1

print(count)


# h(Hz), b(bit), c(Channel), s(Second), 필요한 공간 계산
h, b, c, s = map(int, input().split())

result = h*b*c*s
res1 = result / 8 # bit
res2 = res1 / 1024 # KB
res3 = res2 / 1024 # MB
print(round(res3, 1), 'MB')
